<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.multi.mapper.BoardMapper">
	<insert id="insertBoard" parameterType="Board">
		<selectKey keyProperty="num" order="BEFORE" resultType="_int">
			select spring_board_seq.nextval from dual
		</selectKey>
		insert into spring_board(num, userid, subject, content, passwd, filename, filesize, originFilename, refer, lev, sunbun) 
		values(#{num}, #{userid}, #{subject:VARCHAR}, #{content:VARCHAR}, #{passwd}, 
		#{filename:VARCHAR}, #{filesize:NUMERIC}, #{originFilename:VARCHAR}, #{num}, 0, 0)
	</insert>
	<sql id="findWhere">
		<if test="findType != null and findKeyword !=''">
			<where>
				<if test="findType==1">
					subject like '%'||#{findKeyword}||'%'
				</if>
				<if test="findType==2">
					userid like '%'||#{findKeyword}||'%'
				</if>
				<if test="findType==3">
					content like '%'||#{findKeyword}||'%'
				</if>
			</where>
		</if>
	</sql>
	<select id="getTotalCount" resultType="_int" parameterType="Paging">
		select count(num) from spring_board
		<include refid="findWhere" />
		
	</select>
	<select id="getBoardAllPaging" parameterType="Paging" resultType="Board">
		select * from 
		( select row_number() over(order by refer desc, sunbun asc) rn, spring_board.* from spring_board
		 <include refid="findWhere" />
		) 
		<![CDATA[
		where rn > #{start} and rn < #{end}
		]]>
	</select>
	<select id="getBoardAll_old" parameterType="map" resultType="Board">
		<!-- select * from spring_board order by num desc -->
		select * from spring_board order by refer desc, sunbun asc
	</select>
	<select id="getBoardAll" parameterType="map" resultType="Board">
	select * from 
	( select row_number() over(order by refer desc, sunbun asc) rn, spring_board.* from spring_board ) 
	<![CDATA[
	where rn > #{start} and rn < #{end}
	]]>
	<!-- 부등호 등의 문자가 나올때는 CDATA Section으로 감싸자. CDATA는 Character Data라는
		 의미. CDATA로 감싸진 부분은 xml문서로 파싱하지 않고 문자로 취급한다 -->
		 <!-- where rn &gt; #{start} and rn &lt; #{end} -->
		 <!-- where rn between #{start} and #{end} -->
	</select>
	<select id="selectBoardByNum" parameterType="_int" resultType="Board">
		select * from spring_board where num=#{value}
	</select>
	<update id="updateReadnum" parameterType="_int">
		update spring_board set readnum=readnum+1 where num=#{value}
	</update>
	<select id="selectRefLevSunbun" parameterType="_int" resultType="Board">
		select refer, lev, sunbun from spring_board where num=#{value}
	</select>
	<update id="updateSunbun" parameterType="Board">
		update spring_board set sunbun=sunbun+1 where refer=#{refer} and sunbun > #{sunbun}
	</update>
	<insert id="rewriteBoard" parameterType="Board">
		<selectKey keyProperty="num" order="BEFORE" resultType="_int">
			select spring_board_seq.nextval from dual
		</selectKey>
		insert into spring_board(num, userid, subject, content, passwd, filename, filesize, originFilename, refer, lev, sunbun) 
		values(#{num}, #{userid}, #{subject:VARCHAR}, #{content:VARCHAR}, #{passwd}, 
		#{filename:VARCHAR}, #{filesize:NUMERIC}, #{originFilename:VARCHAR}, #{refer}, #{lev}, #{sunbun})
	</insert>
	<!-- 글 삭제 -->
	<delete id="deleteBoard" parameterType="_int">
		delete from spring_board where num=#{value}
	</delete>
	
	<!-- 글 수정 -->
	<update id="updateBoard" parameterType="Board">
		update spring_board set userid=#{userid}, subject=#{subject},
		content=#{content:VARCHAR}, passwd=#{passwd}
		<if test="filename != null and filename!=''">
		, filename=#{filename}, filesize=#{filesize}, originFilename=#{originFilename}
		</if>
		<where>	
			num=#{num}
		</where>
	</update>
	
</mapper>